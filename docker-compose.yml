services:
  mjos.clean.api:
    image: ${DOCKER_REGISTRY}mjoscleanapi
    container_name: Mjos.Clean.Api
    #build:
    #  context: .
    #  dockerfile: Mjos.Clean.Api/Dockerfile
    ports:
      - "5000:5000" # HTTP
      - "5001:5001" # HTTPS
    volumes:
      - ./Mjos.Clean.Api/certs/https.crt:/certs/https.crt # Mount the certificate
      - ./Mjos.Clean.Api/certs/https.key:/certs/https.key # Mount the key
    environment:
      - ASPNETCORE_ENVIRONMENT=Production # Set the environment
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/certs/https.crt
      - ASPNETCORE_Kestrel__Certificates__Default__KeyPath=/certs/https.key
      - OTEL_EXPORTER_OTLP_ENDPOINT:"http://jaeger:4317"
      - ConnectionStrings__Mjsantos__SqlDb1=server=sqlserver;database=PremierLeagueDb;user id=sa;password=MjosTeste123.;Connection Timeout=6000;Persist Security Info=True;Encrypt=true;TrustServerCertificate=yes;
      - SeedData=SeedData

    networks:
      - mjos-clean

  postgres:
    image: postgres:${POSTGRES_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${POSTGRES_USER:-keycloak}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - ./postgresql/var/lib/postgresql:/var/lib/postgresql
      - ./postgresql/var/lib/postgresql/data:/var/lib/postgresql/data
    networks:
      - mjos-clean

  keycloak:
    image: quay.io/keycloak/keycloak:${KC_VERSION}
    command: ["start-dev", "--import-realm"]
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${POSTGRES_USER:-keycloak}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
      KC_REALM_NAME: ${KC_REALM_NAME}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_TEMP}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_ADMIN_USER: ${KEYCLOAK_ADMIN}
      KC_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      GF_URL: ${GF_HOSTNAME}:${GF_SERVER_HTTP_PORT}
      GF_ADMIN_USERNAME: ${GF_ADMIN_USERNAME}
      GF_ADMIN_PASSWORD: ${GF_ADMIN_PASSWORD}
    ports:
      - ${KC_PORT}:8080
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json:ro
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./keycloak/data:/data
      - ./keycloak/providers:/opt/jboss/keycloak/providers
      - ./keycloak/standalone/configuration:/opt/jboss/keycloak/standalone/configuration
    networks:
      - mjos-clean

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    user: root
    container_name: sqlserver
    #command: /bin/bash ./entrypoint.sh
    environment:
      SA_PASSWORD: ${SQLSERVER_SA_PASSWORD:-MjosTeste123.}
      MSSQL_SA_PASSWORD: ${SQLSERVER_MSSQL_SA_PASSWORD:-MjosTeste123.}
      ACCEPT_EULA: "Y"
      MSSQL_ENCRYPT: "false"
      #DB_NAME: ${DB_NAME:-PremierLeagueDb} # Pass DB_NAME from .env
    ports:
      - "1433:1433"
    volumes:
      - ./sqldata:/var/opt/mssql/data
      - ./sql-db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./sql-db/entrypoint.sh:/usr/config/entrypoint.sh
    #command: ["/bin/bash", "/usr/config/entrypoint.sh"]

    networks:
      - mjos-clean

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: Jaeger
    ports:
      - 4317:4317
      - 4318:4318
      - 16686:16686
    networks:
      - mjos-clean

networks:
  mjos-clean:
    driver: bridge
